{"ast":null,"code":"export { dnsEncode, hashMessage, id, isValidName, namehash } from '@ethersproject/hash';\nimport { arrayify } from '@ethersproject/bytes';\nexport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexStripZeros, hexValue, hexZeroPad, hexlify, isBytes, isBytesLike, isHexString, joinSignature, splitSignature, stripZeros, zeroPad } from '@ethersproject/bytes';\nexport { formatEther, formatUnits, parseEther, parseUnits } from '@ethersproject/units';\nimport '@ethersproject/bignumber';\nexport { Interface } from '@ethersproject/abi';\nconst version$1 = \"logger/5.7.0\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nfunction _checkNormalize() {\n  try {\n    const missing = [];\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n  return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  // Not Implemented\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n  // Unsupported Operation\n  //   - operation\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  // Some sort of bad response from the server\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n  // Timeout\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n  ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n  ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n  ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n  // Insufficient funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n  // Nonce has already been used\n  //   - transaction: the transaction attempted\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n  // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n  // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n  // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n  ///////////////////\n  // Interaction Errors\n  // The user rejected the action, such as signing a message or sending\n  // a transaction\n  ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\nconst HEX = \"0123456789abcdef\";\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log.apply(console, args);\n  }\n  debug() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._log(Logger.levels.DEBUG, args);\n  }\n  info() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._log(Logger.levels.INFO, args);\n  }\n  warn() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._log(Logger.levels.WARNING, args);\n  }\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      const value = params[key];\n      try {\n        if (value instanceof Uint8Array) {\n          let hex = \"\";\n          for (let i = 0; i < value.length; i++) {\n            hex += HEX[value[i] >> 4];\n            hex += HEX[value[i] & 0x0f];\n          }\n          messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n        } else {\n          messageDetails.push(key + \"=\" + JSON.stringify(value));\n        }\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n    let url = \"\";\n    switch (code) {\n      case ErrorCode.NUMERIC_FAULT:\n        {\n          url = \"NUMERIC_FAULT\";\n          const fault = message;\n          switch (fault) {\n            case \"overflow\":\n            case \"underflow\":\n            case \"division-by-zero\":\n              url += \"-\" + fault;\n              break;\n            case \"negative-power\":\n            case \"negative-width\":\n              url += \"-unsupported\";\n              break;\n            case \"unbound-bitwise-result\":\n              url += \"-unbound-result\";\n              break;\n          }\n          break;\n        }\n      case ErrorCode.CALL_EXCEPTION:\n      case ErrorCode.INSUFFICIENT_FUNDS:\n      case ErrorCode.MISSING_NEW:\n      case ErrorCode.NONCE_EXPIRED:\n      case ErrorCode.REPLACEMENT_UNDERPRICED:\n      case ErrorCode.TRANSACTION_REPLACED:\n      case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n        url = code;\n        break;\n    }\n    if (url) {\n      message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n    }\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n    // @TODO: Any??\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n  checkNormalize(message) {\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n    if (message == null) {\n      message = \"value not safe\";\n    }\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version$1);\n    }\n    return _globalLogger;\n  }\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _logLevel = level;\n  }\n  static from(version) {\n    return new Logger(version);\n  }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\nconst version = \"strings/5.7.0\";\nconst logger = new Logger(version);\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n  UnicodeNormalizationForm[\"current\"] = \"\";\n  UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n  UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n  UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n  UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\nvar Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n  // A continuation byte was present where there was nothing to continue\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n  // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n  // The string is too short to process the expected codepoint\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n  // A missing continuation byte was expected but not found\n  // - offset = the index the continuation byte was expected at\n  Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n  // The computed code point is outside the range for UTF-8\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; outside the UTF-8 range\n  Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n  // UTF-8 strings may not contain UTF-16 surrogate pairs\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n  Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n  // The string is an overlong representation\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; already bounds checked\n  Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n  return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n    let i = 0;\n    for (let o = offset + 1; o < bytes.length; o++) {\n      if (bytes[o] >> 6 !== 0x02) {\n        break;\n      }\n      i++;\n    }\n    return i;\n  }\n  // This byte runs us past the end of the string, so just jump to the end\n  // (but the first byte was read already read and therefore skipped)\n  if (reason === Utf8ErrorReason.OVERRUN) {\n    return bytes.length - offset - 1;\n  }\n  // Nothing to skip\n  return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n  // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n  if (reason === Utf8ErrorReason.OVERLONG) {\n    output.push(badCodepoint);\n    return 0;\n  }\n  // Put the replacement character into the output\n  output.push(0xfffd);\n  // Otherwise, process as if ignoring errors\n  return ignoreFunc(reason, offset, bytes);\n}\n// Common error handing strategies\nconst Utf8ErrorFuncs = Object.freeze({\n  error: errorFunc,\n  ignore: ignoreFunc,\n  replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n  if (onError == null) {\n    onError = Utf8ErrorFuncs.error;\n  }\n  bytes = arrayify(bytes);\n  const result = [];\n  let i = 0;\n  // Invalid bytes are ignored\n  while (i < bytes.length) {\n    const c = bytes[i++];\n    // 0xxx xxxx\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    }\n    // Multibyte; how many bytes left for this character?\n    let extraLength = null;\n    let overlongMask = null;\n    // 110x xxxx 10xx xxxx\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f;\n      // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff;\n      // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if ((c & 0xc0) === 0x80) {\n        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n      } else {\n        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n      }\n      continue;\n    }\n    // Do we have enough bytes in our data?\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n      continue;\n    }\n    // Remove the length prefix from the char\n    let res = c & (1 << 8 - extraLength - 1) - 1;\n    for (let j = 0; j < extraLength; j++) {\n      let nextChar = bytes[i];\n      // Invalid continuation byte\n      if ((nextChar & 0xc0) != 0x80) {\n        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n        res = null;\n        break;\n      }\n      res = res << 6 | nextChar & 0x3f;\n      i++;\n    }\n    // See above loop for invalid continuation byte\n    if (res === null) {\n      continue;\n    }\n    // Maximum code point\n    if (res > 0x10ffff) {\n      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n    // Reserved for UTF-16 surrogate halves\n    if (res >= 0xd800 && res <= 0xdfff) {\n      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n    // Check for overlong sequences (more bytes than needed)\n    if (res <= overlongMask) {\n      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n    result.push(res);\n  }\n  return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str) {\n  let form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnicodeNormalizationForm.current;\n  if (form != UnicodeNormalizationForm.current) {\n    logger.checkNormalize();\n    str = str.normalize(form);\n  }\n  let result = [];\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push(c >> 6 | 0xc0);\n      result.push(c & 0x3f | 0x80);\n    } else if ((c & 0xfc00) == 0xd800) {\n      i++;\n      const c2 = str.charCodeAt(i);\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new Error(\"invalid utf-8 string\");\n      }\n      // Surrogate Pair\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push(pair >> 18 | 0xf0);\n      result.push(pair >> 12 & 0x3f | 0x80);\n      result.push(pair >> 6 & 0x3f | 0x80);\n      result.push(pair & 0x3f | 0x80);\n    } else {\n      result.push(c >> 12 | 0xe0);\n      result.push(c >> 6 & 0x3f | 0x80);\n      result.push(c & 0x3f | 0x80);\n    }\n  }\n  return arrayify(result);\n}\nfunction _toUtf8String(codePoints) {\n  return codePoints.map(codePoint => {\n    if (codePoint <= 0xffff) {\n      return String.fromCharCode(codePoint);\n    }\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\");\n}\nfunction toUtf8String(bytes, onError) {\n  return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nfunction bytes2(data) {\n  if (data.length % 4 !== 0) {\n    throw new Error(\"bad data\");\n  }\n  let result = [];\n  for (let i = 0; i < data.length; i += 4) {\n    result.push(parseInt(data.substring(i, i + 4), 16));\n  }\n  return result;\n}\nfunction createTable(data, func) {\n  if (!func) {\n    func = function (value) {\n      return [parseInt(value, 16)];\n    };\n  }\n  let lo = 0;\n  let result = {};\n  data.split(\",\").forEach(pair => {\n    let comps = pair.split(\":\");\n    lo += parseInt(comps[0], 16);\n    result[lo] = func(comps[1]);\n  });\n  return result;\n}\nfunction createRangeTable(data) {\n  let hi = 0;\n  return data.split(\",\").map(v => {\n    let comps = v.split(\"-\");\n    if (comps.length === 1) {\n      comps[1] = \"0\";\n    } else if (comps[1] === \"\") {\n      comps[1] = \"1\";\n    }\n    let lo = hi + parseInt(comps[0], 16);\n    hi = parseInt(comps[1], 16);\n    return {\n      l: lo,\n      h: hi\n    };\n  });\n}\ncreateRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\n\"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(v => parseInt(v, 16));\ncreateTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\ncreateTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\ncreateTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\ncreateRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nexport { toUtf8Bytes, toUtf8String };","map":{"version":3,"mappings":"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","names":["version","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_checkNormalize","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","HEX","Logger","constructor","Object","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","i","JSON","stringify","toString","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","name","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","from","logger","UnicodeNormalizationForm","Utf8ErrorReason","errorFunc","offset","bytes","output","badCodepoint","ignoreFunc","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","replaceFunc","OVERLONG","Utf8ErrorFuncs","freeze","ignore","replace","getUtf8CodePoints","onError","arrayify","result","c","extraLength","overlongMask","res","j","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","str","current","charCodeAt","c2","pair","_toUtf8String","codePoints","map","codePoint","toUtf8String","bytes2","data","parseInt","substring","createTable","func","lo","split","comps","createRangeTable","hi","v","l","h"],"sources":["/Users/youssefsrondy/Desktop/web3/week3_project/node_modules/alchemy-sdk/node_modules/@ethersproject/logger/lib.esm/_version.js","/Users/youssefsrondy/Desktop/web3/week3_project/node_modules/alchemy-sdk/node_modules/@ethersproject/logger/lib.esm/index.js","/Users/youssefsrondy/Desktop/web3/week3_project/node_modules/alchemy-sdk/node_modules/@ethersproject/strings/lib.esm/_version.js","/Users/youssefsrondy/Desktop/web3/week3_project/node_modules/alchemy-sdk/node_modules/@ethersproject/strings/lib.esm/utf8.js","/Users/youssefsrondy/Desktop/web3/week3_project/node_modules/alchemy-sdk/node_modules/@ethersproject/strings/lib.esm/idna.js"],"sourcesContent":["export const version = \"logger/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"strings/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map"]},"metadata":{},"sourceType":"module","externalDependencies":[]}