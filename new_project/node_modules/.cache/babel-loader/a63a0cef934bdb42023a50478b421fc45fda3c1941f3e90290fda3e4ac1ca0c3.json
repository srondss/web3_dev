{"ast":null,"code":"var _jsxFileName = \"/Users/youssefsrondy/Desktop/web3/week3_project/src/Accounts.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from \"alchemy-sdk\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Accounts = () => {\n  _s();\n  const settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET\n  };\n  const alchemy = new Alchemy(settings);\n  let [balance, setBalance] = useState(0);\n  let [userAddress, setUserAddress] = useState(\"\");\n  let [showBalance, setShowBalance] = useState(false);\n  async function getBalance(address) {\n    let response = await alchemy.core.getBalance(address, \"latest\");\n    setBalance(response);\n    setShowBalance(!showBalance);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"0x...\",\n      onChange: e => {\n        setUserAddress(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getBalance(userAddress);\n      },\n      children: \"Get Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showBalance ? balance : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Accounts, \"HXQY7FihoSL4+UU6cN3eMM1GMhY=\");\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["Alchemy","Network","useState","Accounts","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","balance","setBalance","userAddress","setUserAddress","showBalance","setShowBalance","getBalance","address","response","core","e","target","value"],"sources":["/Users/youssefsrondy/Desktop/web3/week3_project/src/Accounts.js"],"sourcesContent":["import { Alchemy, Network } from \"alchemy-sdk\";\nimport { useState } from \"react\";\n\nexport const Accounts = () => {\n  const settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET,\n  };\n\n  const alchemy = new Alchemy(settings);\n\n  let [balance, setBalance] = useState(0);\n  let [userAddress, setUserAddress] = useState(\"\");\n  let [showBalance, setShowBalance] = useState(false);\n\n  async function getBalance(address) {\n    let response = await alchemy.core.getBalance(address, \"latest\");\n    setBalance(response);\n    setShowBalance(!showBalance);\n  }\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"0x...\"\n        onChange={(e) => {\n          setUserAddress(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          getBalance(userAddress);\n        }}\n      >\n        Get Balance\n      </button>\n      {showBalance ? balance : <div></div>}\n    </div>\n  );\n};\n\nexport default Accounts;\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,aAAa;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC5B,MAAMC,QAAQ,GAAG;IACfC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;IAC7CC,OAAO,EAAER,OAAO,CAACS;EACnB,CAAC;EAED,MAAMC,OAAO,GAAG,IAAIX,OAAO,CAACI,QAAQ,CAAC;EAErC,IAAI,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvC,IAAI,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnD,eAAegB,UAAU,CAACC,OAAO,EAAE;IACjC,IAAIC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAI,CAACH,UAAU,CAACC,OAAO,EAAE,QAAQ,CAAC;IAC/DN,UAAU,CAACO,QAAQ,CAAC;IACpBH,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B;EACA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,OAAO;MACnB,QAAQ,EAAGM,CAAC,IAAK;QACfP,cAAc,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAChC;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MACE,OAAO,EAAE,MAAM;QACbN,UAAU,CAACJ,WAAW,CAAC;MACzB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,EACRE,WAAW,GAAGJ,OAAO,gBAAG;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV,CAAC;AAAC,GApCWT,QAAQ;AAAA,KAARA,QAAQ;AAsCrB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}