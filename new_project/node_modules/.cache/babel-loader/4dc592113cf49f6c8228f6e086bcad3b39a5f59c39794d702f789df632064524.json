{"ast":null,"code":"var _jsxFileName = \"/Users/youssefsrondy/Desktop/web3/week3_project/src/Transactions.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from \"alchemy-sdk\";\nimport { Utils } from \"alchemy-sdk\";\nimport { useState } from \"react\";\nimport MoreInfoTx from \"./MoreInfoTx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = props => {\n  _s();\n  let i = 0;\n  const settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET\n  };\n  const alchemy = new Alchemy(settings);\n  let [from, setFrom] = useState(\"\");\n  let [to, setTo] = useState(\"\");\n  let [amount, setAmount] = useState(0);\n  let [selectedIndex, setSelectedIndex] = useState(null);\n  async function getMoreInfo(hash) {\n    let response = await alchemy.core.getTransaction(hash);\n    setFrom(response.from);\n    setTo(response.to);\n    console.log(Utils.formatUnits(\"10000000000000000\", 18));\n    // setAmount(Utils.formatEther(weiparseInt(response.value._hex)));\n    console.log(response.value);\n    setSelectedIndex(hash);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Txs:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), props.txs.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [el, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            getMoreInfo(el);\n          },\n          children: \"More Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), selectedIndex === el && /*#__PURE__*/_jsxDEV(MoreInfoTx, {\n          from: from,\n          to: to,\n          amount: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"LL8zS71hQoaZbbMdLP6zNfOGC5g=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["Alchemy","Network","Utils","useState","MoreInfoTx","Transactions","props","i","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","from","setFrom","to","setTo","amount","setAmount","selectedIndex","setSelectedIndex","getMoreInfo","hash","response","core","getTransaction","console","log","formatUnits","value","txs","map","el"],"sources":["/Users/youssefsrondy/Desktop/web3/week3_project/src/Transactions.js"],"sourcesContent":["import { Alchemy, Network } from \"alchemy-sdk\";\nimport { Utils } from \"alchemy-sdk\";\nimport { useState } from \"react\";\nimport MoreInfoTx from \"./MoreInfoTx\";\n\nexport const Transactions = (props) => {\n  let i = 0;\n\n  const settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET,\n  };\n\n  const alchemy = new Alchemy(settings);\n\n  let [from, setFrom] = useState(\"\");\n  let [to, setTo] = useState(\"\");\n  let [amount, setAmount] = useState(0);\n  let [selectedIndex, setSelectedIndex] = useState(null);\n\n  async function getMoreInfo(hash) {\n    let response = await alchemy.core.getTransaction(hash);\n    setFrom(response.from);\n    setTo(response.to);\n    console.log(Utils.formatUnits(\"10000000000000000\", 18));\n    // setAmount(Utils.formatEther(weiparseInt(response.value._hex)));\n    console.log(response.value);\n    setSelectedIndex(hash);\n  }\n\n  return (\n    <div>\n      <h1>List of Txs:</h1>\n      {props.txs.map((el, i) => {\n        return (\n          <ul key={i}>\n            {el}{\" \"}\n            <button\n              onClick={() => {\n                getMoreInfo(el);\n              }}\n            >\n              More Info\n            </button>\n            {selectedIndex === el && (\n              <MoreInfoTx from={from} to={to} amount={amount} />\n            )}\n          </ul>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,aAAa;AAC9C,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EACrC,IAAIC,CAAC,GAAG,CAAC;EAET,MAAMC,QAAQ,GAAG;IACfC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;IAC7CC,OAAO,EAAEZ,OAAO,CAACa;EACnB,CAAC;EAED,MAAMC,OAAO,GAAG,IAAIf,OAAO,CAACQ,QAAQ,CAAC;EAErC,IAAI,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAI,CAACe,EAAE,EAAEC,KAAK,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9B,IAAI,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,IAAI,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAEtD,eAAeqB,WAAW,CAACC,IAAI,EAAE;IAC/B,IAAIC,QAAQ,GAAG,MAAMX,OAAO,CAACY,IAAI,CAACC,cAAc,CAACH,IAAI,CAAC;IACtDR,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;IACtBG,KAAK,CAACO,QAAQ,CAACR,EAAE,CAAC;IAClBW,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC6B,WAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IACvD;IACAF,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACM,KAAK,CAAC;IAC3BT,gBAAgB,CAACE,IAAI,CAAC;EACxB;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,EACpBnB,KAAK,CAAC2B,GAAG,CAACC,GAAG,CAAC,CAACC,EAAE,EAAE5B,CAAC,KAAK;MACxB,oBACE;QAAA,WACG4B,EAAE,EAAE,GAAG,eACR;UACE,OAAO,EAAE,MAAM;YACbX,WAAW,CAACW,EAAE,CAAC;UACjB,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGK,EACRb,aAAa,KAAKa,EAAE,iBACnB,QAAC,UAAU;UAAC,IAAI,EAAEnB,IAAK;UAAC,EAAE,EAAEE,EAAG;UAAC,MAAM,EAAEE;QAAO;UAAA;UAAA;UAAA;QAAA,QAChD;MAAA,GAXMb,CAAC;QAAA;QAAA;QAAA;MAAA,QAYL;IAET,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA/CWF,YAAY;AAAA,KAAZA,YAAY;AAiDzB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}